global:
  storageClass: "${storage_class}"
  postgresql:
    username: "postgres"
    password: "${postgresql_password}"
    database: "${database_name}"
    repmgrUsername: "repmgr"
    repmgrPassword: "${repmgrPassword}"
    repmgrDatabase: "repmgr"
    existingSecret: ""
  pgpool:
    adminUsername: ""
    adminPassword: ""
    existingSecret: ""

postgresql:
# Use an odd number. Having 3 replicas is the minimum to get quorum when promoting a new primary.
  replicaCount: ${replicaCount}
  syncReplication: true
  syncReplicationMode: ANY
  resources:
    limits:
      cpu: 1000m
      memory: 1Gi
    requests:
      cpu: 150m
      memory: 100Mi

  affinity:
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
        - matchExpressions:
          - key: "Infra-Services"
            operator: In
            values:
            - "true"

pgpool:
  affinity:
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
        - matchExpressions:
          - key: "Infra-Services"
            operator: In
            values:
            - "true"

metrics:
  enabled: true
  serviceMonitor:
    enabled: true
    namespace: ${service_monitor_namespace}
  labels:
    release: "prometheus-operator"
